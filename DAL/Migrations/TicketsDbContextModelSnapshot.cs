// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace dal.Migrations
{
    [DbContext(typeof(TicketsDbContext))]
    partial class TicketsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.CarriageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainId");

                    b.ToTable("CarriageEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Number = 1,
                            TrainId = 1
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Number = 2,
                            TrainId = 1
                        },
                        new
                        {
                            Id = 3,
                            Class = 2,
                            Number = 1,
                            TrainId = 2
                        },
                        new
                        {
                            Id = 4,
                            Class = 4,
                            Number = 2,
                            TrainId = 2
                        });
                });

            modelBuilder.Entity("DAL.Entities.CitiesTrains", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TrainEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityEntityId");

                    b.HasIndex("TrainEntityId");

                    b.ToTable("CitiesTrains");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityEntityId = 1,
                            TrainEntityId = 1
                        },
                        new
                        {
                            Id = 2,
                            CityEntityId = 2,
                            TrainEntityId = 1
                        },
                        new
                        {
                            Id = 3,
                            CityEntityId = 3,
                            TrainEntityId = 1
                        },
                        new
                        {
                            Id = 4,
                            CityEntityId = 4,
                            TrainEntityId = 1
                        },
                        new
                        {
                            Id = 5,
                            CityEntityId = 1,
                            TrainEntityId = 2
                        },
                        new
                        {
                            Id = 6,
                            CityEntityId = 3,
                            TrainEntityId = 2
                        },
                        new
                        {
                            Id = 7,
                            CityEntityId = 5,
                            TrainEntityId = 2
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CityEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sumy"
                        });
                });

            modelBuilder.Entity("DAL.Entities.DayEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DayEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 6, 24, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 6, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 6, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("DAL.Entities.DaysTrains", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<int>("TrainEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("TrainEntityId");

                    b.ToTable("DaysTrains");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayId = 1,
                            TrainEntityId = 1
                        },
                        new
                        {
                            Id = 2,
                            DayId = 2,
                            TrainEntityId = 1
                        },
                        new
                        {
                            Id = 3,
                            DayId = 3,
                            TrainEntityId = 1
                        },
                        new
                        {
                            Id = 4,
                            DayId = 1,
                            TrainEntityId = 2
                        },
                        new
                        {
                            Id = 5,
                            DayId = 3,
                            TrainEntityId = 2
                        });
                });

            modelBuilder.Entity("DAL.Entities.SeatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarriageEntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTaken")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarriageEntityId");

                    b.ToTable("SeatEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarriageEntityId = 1,
                            IsTaken = false,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            CarriageEntityId = 1,
                            IsTaken = false,
                            Number = 2
                        },
                        new
                        {
                            Id = 3,
                            CarriageEntityId = 1,
                            IsTaken = false,
                            Number = 3
                        },
                        new
                        {
                            Id = 4,
                            CarriageEntityId = 2,
                            IsTaken = false,
                            Number = 1
                        },
                        new
                        {
                            Id = 5,
                            CarriageEntityId = 2,
                            IsTaken = false,
                            Number = 2
                        },
                        new
                        {
                            Id = 6,
                            CarriageEntityId = 2,
                            IsTaken = false,
                            Number = 3
                        },
                        new
                        {
                            Id = 7,
                            CarriageEntityId = 3,
                            IsTaken = false,
                            Number = 1
                        },
                        new
                        {
                            Id = 8,
                            CarriageEntityId = 3,
                            IsTaken = false,
                            Number = 2
                        },
                        new
                        {
                            Id = 9,
                            CarriageEntityId = 3,
                            IsTaken = false,
                            Number = 3
                        },
                        new
                        {
                            Id = 10,
                            CarriageEntityId = 4,
                            IsTaken = false,
                            Number = 1
                        },
                        new
                        {
                            Id = 11,
                            CarriageEntityId = 4,
                            IsTaken = false,
                            Number = 2
                        },
                        new
                        {
                            Id = 12,
                            CarriageEntityId = 4,
                            IsTaken = false,
                            Number = 3
                        });
                });

            modelBuilder.Entity("DAL.Entities.TicketEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarriageNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<string>("Passenger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seat")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TicketEntities");
                });

            modelBuilder.Entity("DAL.Entities.TrainEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrainEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            Number = 1
                        });
                });

            modelBuilder.Entity("DAL.Entities.CarriageEntity", b =>
                {
                    b.HasOne("DAL.Entities.TrainEntity", "Train")
                        .WithMany("Carriages")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.CitiesTrains", b =>
                {
                    b.HasOne("DAL.Entities.CityEntity", "CityEntity")
                        .WithMany()
                        .HasForeignKey("CityEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.TrainEntity", "TrainEntity")
                        .WithMany("Cities")
                        .HasForeignKey("TrainEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.DaysTrains", b =>
                {
                    b.HasOne("DAL.Entities.DayEntity", "Day")
                        .WithMany()
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.TrainEntity", "TrainEntity")
                        .WithMany("Dates")
                        .HasForeignKey("TrainEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.SeatEntity", b =>
                {
                    b.HasOne("DAL.Entities.CarriageEntity", "CarriageEntity")
                        .WithMany("Seats")
                        .HasForeignKey("CarriageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
